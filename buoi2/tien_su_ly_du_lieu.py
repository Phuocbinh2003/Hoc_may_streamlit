import streamlit as st
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

def tien_xu_ly_du_lieu():
    st.title("üìä X·ª≠ l√Ω D·ªØ li·ªáu & Chia Train/Test/Validation")

    # Upload file thay v√¨ d√πng ƒë∆∞·ªùng d·∫´n c·ªë ƒë·ªãnh
    uploaded_file = st.file_uploader("üìÇ Ch·ªçn file d·ªØ li·ªáu (.csv ho·∫∑c .txt)", type=["csv", "txt"])

    if uploaded_file is not None:
        try:
            df = pd.read_csv(uploaded_file, delimiter=",")  # ƒêi·ªÅu ch·ªânh delimiter n·∫øu c·∫ßn

            # 1Ô∏è‚É£ Hi·ªÉn th·ªã 10 d√≤ng ƒë·∫ßu ti√™n
            st.subheader("üìå 10 d√≤ng ƒë·∫ßu c·ªßa d·ªØ li·ªáu g·ªëc")
            st.write(df.head(10))

            # 2Ô∏è‚É£ Ki·ªÉm tra l·ªói d·ªØ li·ªáu
            st.subheader("üö® Ki·ªÉm tra l·ªói d·ªØ li·ªáu")
            missing_values = df.isnull().sum()
            error_report = pd.DataFrame({'C·ªôt': df.columns, 'Gi√° tr·ªã thi·∫øu': missing_values})
            st.table(error_report)

            # 3Ô∏è‚É£ X·ª≠ l√Ω l·ªói d·ªØ li·ªáu
            if "Embarked" in df.columns:
                df.dropna(subset=['Embarked'], inplace=True)

            if "Age" in df.columns:
                df['Age'].fillna(df['Age'].mean(), inplace=True)
                df['Age'] = df['Age'].astype(int)  # ƒê·∫£m b·∫£o Age l√† s·ªë nguy√™n

            if "Cabin" in df.columns:
                df['Cabin'].fillna('Unknown', inplace=True)

            if "Pclass" in df.columns:
                df['Pclass'] = df['Pclass'].astype('category')

            if "Sex" in df.columns:
                df['Sex'] = df['Sex'].map({'male': 1, 'female': 0})

            if "Fare" in df.columns and df['Fare'].nunique() > 1:
                scaler = StandardScaler()
                df[['Fare']] = scaler.fit_transform(df[['Fare']])

            # Hi·ªÉn th·ªã d·ªØ li·ªáu sau khi x·ª≠ l√Ω
            st.subheader("‚úÖ D·ªØ li·ªáu sau x·ª≠ l√Ω")
            st.write(df.head(10))

            # 4Ô∏è‚É£ Chia d·ªØ li·ªáu: 70% train, 15% validation, 15% test
            train_df, temp_df = train_test_split(df, test_size=0.3, random_state=42)
            val_df, test_df = train_test_split(temp_df, test_size=0.5, random_state=42)

            # 5Ô∏è‚É£ In s·ªë l∆∞·ª£ng m·∫´u
            st.subheader("üìä S·ªë l∆∞·ª£ng m·∫´u trong t·ª´ng t·∫≠p d·ªØ li·ªáu")
            summary_df = pd.DataFrame({
                "T·∫≠p d·ªØ li·ªáu": ["Train", "Validation", "Test"],
                "S·ªë l∆∞·ª£ng m·∫´u": [train_df.shape[0], val_df.shape[0], test_df.shape[0]]
            })
            st.table(summary_df)

        except Exception as e:
            st.error(f"‚ö†Ô∏è L·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu: {e}")

if __name__ == "__main__":
    tien_xu_ly_du_lieu()
