import os
import subprocess
import time
import mlflow
import streamlit as st
from langchain_openai import OpenAI
from langchain_core.prompts import PromptTemplate

def appptest():
    
    # ƒê·∫£m b·∫£o API Key c·ªßa OpenAI c√≥ s·∫µn trong m√¥i tr∆∞·ªùng
    os.environ["OPENAI_API_KEY"] = "your_openai_api_key_here"

    # T·∫°o ho·∫∑c ƒë·∫∑t Experiment Name (s·∫Ω t·ª± ƒë·ªông t·∫°o n·∫øu ch∆∞a c√≥)
    mlflow.set_experiment("LangChain_Tracking")

    # H√†m ki·ªÉm tra xem MLflow UI ƒë√£ ch·∫°y ch∆∞a
    def is_mlflow_running():
        try:
            output = subprocess.check_output("lsof -i :5000", shell=True).decode()
            return "mlflow" in output
        except subprocess.CalledProcessError:
            return False

    # H√†m kh·ªüi ƒë·ªông MLflow UI n·∫øu ch∆∞a ch·∫°y
    def start_mlflow_ui():
        if not is_mlflow_running():
            subprocess.Popen(["mlflow", "ui", "--port", "5000"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            time.sleep(3)  # Ch·ªù v√†i gi√¢y ƒë·ªÉ UI kh·ªüi ƒë·ªông

    # Ch·∫°y MLflow UI khi m·ªü ·ª©ng d·ª•ng Streamlit
    start_mlflow_ui()

    # Giao di·ªán Streamlit
    st.title("MLflow LangChain Tracking v·ªõi Streamlit")

    # Hi·ªÉn th·ªã link truy c·∫≠p MLflow UI
    st.markdown("### üîó [Truy c·∫≠p MLflow UI](http://localhost:5000)")

    # Nh·∫≠p c√¢u h·ªèi
    question = st.text_input("Nh·∫≠p c√¢u h·ªèi:", "What is MLflow?")

    if st.button("G·ª≠i c√¢u h·ªèi"):
        with mlflow.start_run():
            # G·ªçi m√¥ h√¨nh LangChain
            llm = OpenAI()
            prompt = PromptTemplate.from_template("Answer the following question: {question}")
            chain = prompt | llm
            response = chain.invoke(question)

            # Ghi log v√†o MLflow
            mlflow.log_param("prompt", "Answer the following question: {question}")
            mlflow.log_param("question", question)
            mlflow.log_param("model", "OpenAI GPT")
            mlflow.log_metric("response_length", len(response))
            mlflow.log_text(response, "response.txt")

            # Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ m√¥ h√¨nh
            st.write("### Ph·∫£n h·ªìi t·ª´ m√¥ h√¨nh:")
            st.write(response)
