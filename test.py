import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
from sklearn.datasets import fetch_openml

# @st.cache_data
# def load_mnist():
#     """T·∫£i d·ªØ li·ªáu MNIST t·ª´ OpenML"""
#     mnist = fetch_openml('mnist_784', version=1, as_frame=False)
#     X, y = mnist.data, mnist.target
#     return X, y.astype(int)

st.title("üìâ Gi·∫£m chi·ªÅu d·ªØ li·ªáu MNIST v·ªõi PCA & t-SNE")

# Load d·ªØ li·ªáu
X = np.load("buoi4/X.npy")
y = np.load("buoi4/y.npy")

st.write(X[0])



# T√πy ch·ªçn thu·∫≠t to√°n
method = st.radio("Ch·ªçn ph∆∞∆°ng ph√°p gi·∫£m chi·ªÅu", ["PCA", "t-SNE"])
n_components = st.slider("S·ªë chi·ªÅu gi·∫£m xu·ªëng", 2, 3, 2)

# Gi·ªõi h·∫°n s·ªë m·∫´u ƒë·ªÉ tƒÉng t·ªëc (c√≥ th·ªÉ ch·ªânh s·ª≠a)
num_samples = 5000
X_subset, y_subset = X[:num_samples], y[:num_samples]

# N√∫t ch·∫°y thu·∫≠t to√°n
if st.button("üöÄ Ch·∫°y gi·∫£m chi·ªÅu"):
    with st.spinner("ƒêang x·ª≠ l√Ω..."):
        if method == "PCA":
            reducer = PCA(n_components=n_components)
        else:
            reducer = TSNE(n_components=n_components, perplexity=min(30, num_samples - 1), random_state=42)

        X_reduced = reducer.fit_transform(X_subset)

        # Hi·ªÉn th·ªã k·∫øt qu·∫£
        if n_components == 2:
            fig = px.scatter(x=X_reduced[:, 0], y=X_reduced[:, 1], color=y_subset.astype(str),
                             title=f"{method} gi·∫£m chi·ªÅu xu·ªëng {n_components}D",
                             labels={'x': "Th√†nh ph·∫ßn 1", 'y': "Th√†nh ph·∫ßn 2"})
        else:  # Bi·ªÉu ƒë·ªì 3D
            fig = px.scatter_3d(x=X_reduced[:, 0], y=X_reduced[:, 1], z=X_reduced[:, 2],
                                color=y_subset.astype(str),
                                title=f"{method} gi·∫£m chi·ªÅu xu·ªëng {n_components}D",
                                labels={'x': "Th√†nh ph·∫ßn 1", 'y': "Th√†nh ph·∫ßn 2", 'z': "Th√†nh ph·∫ßn 3"})

        st.plotly_chart(fig)

st.success("Ho√†n th√†nh!")
